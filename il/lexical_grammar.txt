program         : statement* EOF ;

declaration     : var_declaration | fun_declaration | statement ;

statement       : expr_statement | block | if_statement | while_statement | for_statement ;

var_declaration : "let" IDENTIFIER ( "=" expression )? ";" ;

fun_declaration : "fun" IDENTIFIER "(" parameters? ")" block ;

parameters      : IDENTIFIER ( "," IDENTIFIER )* ;

expr_statement  : expression ";" ;

if_statement    : "if" "(" expression ")" statement ( "else" statement )* ;

while_statement : "while" "(" expression ")" statement ;

for_statement   : "for" "(" ( var_declaration | expr_statement | ";" ) exression? ";" expression? ")" statement ;

block           : "{" declaration* "}" ;


expression      : assignment ;

assignment      : IDENTIFIER "=" assignment | logic_or ;

logic_or        : logic_and ( "or" logic_and )* ;

logic_and       : equality ( "and" equality )* ;

equality        : comparison ( ( "!=" | "==" ) comparison )* ;

comparison      : term ( ( ">" | ">=" | "<" | "<=" ) term )* ;

term            : factor ( ( "-" | "+" ) factor )* ;

factor          : unary ( ( "/" | "*" ) unary )* ;

unary           : ( "-" | "!" ) unary | call ;

call            : primary ( "(" arguments? ")" )* ;

primary         : NUMBER | STRING | "true" | "false" | "null" | "(" expression ")" | IDENTIFIER ;

arguments       : expression ( "," expression )* ;
